#pragma checksum "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9712bf851f6e125acf09f4a59c3b39b76b43b64f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MapCompetitor_AddLocationMap), @"mvc.1.0.view", @"/Views/MapCompetitor/AddLocationMap.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\work\RealEstate\crm\sams\Views\_ViewImports.cshtml"
using sams;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\work\RealEstate\crm\sams\Views\_ViewImports.cshtml"
using sams.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
using sams.Common;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9712bf851f6e125acf09f4a59c3b39b76b43b64f", @"/Views/MapCompetitor/AddLocationMap.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"68aa8a1e919ff244f34303758cc2c5870b4b6152", @"/Views/_ViewImports.cshtml")]
    public class Views_MapCompetitor_AddLocationMap : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<sams.Models.CompetitorViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
  
    UserViewModel loggedInUser = Context.Session.GetObjectFromJson<UserViewModel>("LoggedInAdmin");

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 8 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
  
    ViewData["Title"] = "EditSavedMap";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    var lati = sams.Common.Helper.SamsLatitude;
    var loni = sams.Common.Helper.SamsLongitude;

    if (Model.SelectedCordinates.Count > 0)
    {
        lati = Model.SelectedCordinates[0].Latitude;
        loni = Model.SelectedCordinates[0].Longitude;
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyByxJE-OM4Lv77gVdAYJAfKOiDpD6H9ofg&v=3.exp&sensor=false&libraries=places""></script>
<script>


    function SaveAddress() {
        var adderess = $('#txtAddress').val();
        var landSize = $('#txtLandSize').val();
        var askingPrice = $('#txtAskingPrice').val();
        var zoning = $('#txtZoning').val();
        var markerId = $('#txtMarkerId').val();

        var headerDetails = { adderess: adderess, landSize: landSize, askingPrice: askingPrice, zoning: zoning, markerId: markerId }
        var JsonHeaderDetails = JSON.stringify(headerDetails);
        locHeader = {
            jsonString: JsonHeaderDetails
        };


        var baseUrl = """);
#nullable restore
#line 41 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                  Write(Url.Action("UpdateMapCordinateAddress", "MapCompetitor"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";

        $.ajax({
            type: 'POST',
            url: baseUrl,
            data: locHeader,
            success: function (response) {
                if (response != null) {
                    alert(""Address Updated"");
                    location.reload();
                }
            },
            failure: function (response) {

                alert(response.responseText);
            },
            error: function (response) {

                alert(response.responseText);
            }
        });

    }

    function deleteMarker(markerId) {

        if (confirm(""Do you confirm delete the marker?"")) {

            $(""#divLoading"").show();
        $(""#btnSaveMap"").hide();

        var totalObjects = selectedMarkersObjectArray.length;

        var txtMapTitle = $(""#txtMapTitle"").val();
        var headerId = $(""#hdnHeaderId"").val();

        if (txtMapTitle.trim() == """") {
            $(""#errMapTitle"").html(""<font color='red'>Please enter Map Title</font>");
            WriteLiteral(@""");
            $(""#txtMapTitle"").focus();
            return;
        }
        else {
            $(""#errMapTitle"").html("""");
        }

        var headerDetails = { headerId: headerId, headerName: txtMapTitle }
        var JsonHeaderDetails = JSON.stringify(headerDetails);

        locHeader = {
            jsonString: JsonHeaderDetails
        };
        var baseUrl = """);
#nullable restore
#line 92 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                  Write(Url.Action("SaveMapHeader", "MapCompetitor"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";

        $.ajax({
            type: 'POST',
            url: baseUrl,
            data: locHeader,
            success: function (response) {
                if (response != null) {



                    $.ajax({
                        type: 'POST',
                        url: baseUrl,
                        data: locDetails,
                        success: function (response) {
                            if (response != null) {
                                $(""#divLoading"").hide();
                                location.href = """);
#nullable restore
#line 110 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                            Write(Url.Action("Index", "MapCompetitor"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                            }
                        },
                        failure: function (response) {
                            $(""#divLoading"").hide();
                            alert(response.responseText);
                        },
                        error: function (response) {
                            $(""#divLoading"").hide();
                            alert(response.responseText);
                        }
                    });
                }
            },
            failure: function (response) {
                $(""#divLoading"").hide();
                alert(response.responseText);
            },
            error: function (response) {
                $(""#divLoading"").hide();
                alert(response.responseText);
            }
        });

        }
    }

    var allMarkersList = [];
                var map;
                var Markers = {};
                var infowindow;
                var locations = [

");
#nullable restore
#line 143 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                      
                        int i = 0;
                        foreach (var selLocations in Model.SelectedCordinates)
                        {


#line default
#line hidden
#nullable disable
            WriteLiteral("                                ");
            WriteLiteral("[\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 149 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.MarkerColor);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'<strong>");
#nullable restore
#line 150 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                          Write(selLocations.MarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </strong> <br />");
#nullable restore
#line 150 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                                                                     Write(selLocations.MarkerAddress);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 151 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                 Write(selLocations.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 152 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                 Write(selLocations.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 153 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.MarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 154 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.MarkerType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 155 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                 Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 156 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.CoordinateId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n");
            WriteLiteral("                                ");
            WriteLiteral("    \'");
#nullable restore
#line 158 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.AddedAddress);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 159 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.LandSize);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 160 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.AskingPrice);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 161 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                  Write(selLocations.Zoning);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n");
            WriteLiteral("                                ");
            WriteLiteral("],\r\n");
#nullable restore
#line 164 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"

                            i++;
                        }
                    

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n                ];\r\n\r\n                //var icon = new google.maps.MarkerImage(\"img/map/green_pointer.png\");\r\n                var origin = new google.maps.LatLng(");
#nullable restore
#line 177 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                               Write(lati);

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 177 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                                      Write(loni);

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

                            function initialize() {
                                var mapOptions = {
                        zoom: 10,
                        center: origin
                                };

                            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    infowindow = new google.maps.InfoWindow();
                                var j = 1;
                                for (i = 0; i < locations.length; i++) {
                                    var colorSelcted = locations[i][0];

                                    var position = new google.maps.LatLng(locations[i][2], locations[i][3]);

                                    var markerType = locations[i][5];
                                    var selHeader = locations[i][4].substring(0, 2);

                                    if (markerType == ""sh_proposed"") {
                                        selHeader = ""S"" + j;
                             ");
            WriteLiteral(@"           j = j + 1;

                                        /*
                                        var icon = new google.maps.MarkerImage(
                                            ""http://www.googlemapsmarkers.com/v1/"" + selHeader + ""/"" + colorSelcted + ""/FFFFFF/000000/"",
                                            new google.maps.Size(50, 60),
                                        );
                                        */

                                        var icon = {
                                            //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + ""/FFFFFF/FFFFFF/"",
                                            url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
                                            //size: new google.maps.Size(70, 78),
                                            //origin: new google.maps.Point(0, 0),
                                            //anchor: new google.maps.Point(17, 34),
                    ");
            WriteLiteral(@"                        scaledSize: new google.maps.Size(60, 60)
                                        }; // Create a marker for each place.

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            map: map,
                                        });
                                    }
                                    else {

                                        //var icon = new google.maps.MarkerImage(""http://www.googlemapsmarkers.com/v1/"" + selHeader + ""/"" + colorSelcted + ""/FFFFFF/FFFFFF/"");
                                        var icon = {
                                            //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + ""/FFFFFF/FFFFFF/"",
                                            url: colorSelcted,
                                            //size: new google");
            WriteLiteral(@".maps.Size(70, 78),
                                            //origin: new google.maps.Point(0, 0),
                                            //anchor: new google.maps.Point(17, 34),
                                            scaledSize: new google.maps.Size(30, 30)
                                        }; // Create a marker for each place.

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            map: map,
                                        });

                                    }

                                    allMarkersList.push(marker);





                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {

                                //infowindow.setContent(locations[i][1]);
                       ");
            WriteLiteral(@"         infowindow.setOptions({ maxWidth: 200 });

                                var content = """";
                                content += '<div class=""row"">';
                                content += '   <div class=""col-lg-12"">';
                                content += '        <div class=""form-group"">';
                                content += '            <label class=""control-label"">Address</label>';
                                content += '            <input name=""txtAddress"" id=""txtAddress"" class=""form-control"" value=""' + locations[i][8] + '"" />';
                                content += '            <input type=""hidden"" name=""txtMarkerId"" id=""txtMarkerId"" class=""form-control"" value=""' + locations[i][7] + '"" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class=""col-lg-12"">';
                                content += '        <div class=""form-gro");
            WriteLiteral(@"up"">';
                                content += '            <label class=""control-label"">Land Size</label>';
                                content += '            <input name=""txtLandSize"" id=""txtLandSize"" class=""form-control"" value=""' + locations[i][9] + '"" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class=""col-lg-12"">';
                                content += '        <div class=""form-group"">';
                                content += '            <label class=""control-label"">Asking Price</label>';
                                content += '            <input name=""txtAskingPrice"" id=""txtAskingPrice"" class=""form-control""  value=""' + locations[i][10] + '"" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class=""col-lg-12"">';
     ");
            WriteLiteral(@"                           content += '        <div class=""form-group"">';
                                content += '            <label class=""control-label"">Zoning</label>';
                                content += '            <input name=""txtZoning"" id=""txtZoning"" class=""form-control"" value=""' + locations[i][11] + '"" />';
                                content += '        </div>';
                                content += '    </div>';

                                //content += '<div id=""divLoading"" class=""spinner-border"" role=""status"">';
                                //content += '    <span class=""sr-only"">Loading...</span>';
                                //content += '</div>';

                                content += '</div>';

                                content += ""<br /><input class='btn btn-block btn-danger btn-sm' type='button' onclick = 'SaveAddress();' value = 'Save Address' />"";
                                content += ""<br /><input class='btn btn-block btn-dange");
            WriteLiteral(@"r btn-sm' type='button' onclick = 'deleteMarker(""+locations[i][7]+"");' value = 'Delete Marker' />"";



                                infowindow.setContent(content);

                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                        Markers[locations[i][4]] = marker;
                                }

                                var selectedColor = """";

                                google.maps.event.addListener(map, 'click', function (e) {

                                    var selType = $(""#selectionType"").val();

                                    if (selType == ""sh_proposed"") {

                                        $(""#selectionType"").val(""0"");

                                        var clientFullName = """";

                                        var markedAddress = """";

                                        if (selType == ""sh_proposed"") {

                               ");
            WriteLiteral(@"             /*
                                            var icon = {
                                                url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + ""/FFFFFF/FFFFFF/"",
                                                //size: new google.maps.Size(42, 68),
                                                //origin: new google.maps.Point(0, 0),
                                                //anchor: new google.maps.Point(17, 34),
                                                //scaledSize: new google.maps.Size(42, 68)
                                            }; // Create a marker for each place.
                                            */

                                            var icon = {
                                                //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + ""/FFFFFF/FFFFFF/"",
                                                url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
            ");
            WriteLiteral(@"                                    //size: new google.maps.Size(70, 78),
                                                //origin: new google.maps.Point(0, 0),
                                                //anchor: new google.maps.Point(17, 34),
                                                scaledSize: new google.maps.Size(60, 60)
                                            }; // Create a marker for each place.

                                            markedAddress = ""Sams Proposed"";

                                        }
                                        else {
                                            //var icon = new google.maps.MarkerImage('http://www.googlemapsmarkers.com/v1/' + selectedPlaceOnClick + '/' + selectedColorCode + ""/FFFFFF/000000/"");
                                            //markedAddress = ""Admin Selected"";

                                        }


                                        //Determine the location where the user has clicked.
     ");
            WriteLiteral(@"                                   var location = e.latLng;

                                        if (confirm(""Do you want to save this location?"")) {
                                            //Create a marker and placed it on the map.
                                            var marker = new google.maps.Marker({
                                                position: location,
                                                icon: icon,
                                                draggable: true,
                                                map: map
                                            });

                                            var newLatitude = location.lat();
                                            var newLongitude = location.lng();
                                            var headerId = ");
#nullable restore
#line 364 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                                      Write(Model.SelectedCordinates[0].HeaderId);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

                                            var adderess = ""Sams Proposed"";
                                            var marker_color = ""850685"";
                                            var marker_header =""Sh""
                                            var marker_type = ""sh_proposed"";
                                            var mapHeaderId = headerId;

                                            var headerDetails = {
                                                headerId: mapHeaderId,
                                                latitude: newLatitude,
                                                longitude: newLongitude,
                                                marker_color: marker_color,
                                                marker_header: marker_header,
                                                marker_address: adderess,
                                                marker_type: marker_type
                                            }


     ");
            WriteLiteral(@"                                       var JsonHeaderDetails = JSON.stringify(headerDetails);
                                            locHeader = {
                                                jsonString: JsonHeaderDetails
                                            };


                                            var baseUrl = """);
#nullable restore
#line 389 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                                      Write(Url.Action("SaveSingleMapLocation", "MapCompetitor"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";

                                            $.ajax({
                                                type: 'POST',
                                                url: baseUrl,
                                                data: locHeader,
                                                success: function (response) {
                                                    if (response != null) {
                                                        alert(""Location Updated"");
                                                        location.reload();
                                                    }
                                                },
                                                failure: function (response) {

                                                    alert(response.responseText);
                                                },
                                                error: function (response) {

                                                   ");
            WriteLiteral(@" alert(response.responseText);
                                                }
                                            });

                                        }
                                        else {
                                            alert(""Cancelled"");
                                        }






                                    }

                                });




                        locate(0);


    }



                    function locate(marker_id) {
                        var myMarker = Markers[marker_id];
                        var markerPosition = myMarker.getPosition();
                        map.setCenter(markerPosition);
                        google.maps.event.trigger(myMarker, 'click');
                    }

                    google.maps.event.addDomListener(window, 'load', initialize);


    function markProposedLocations(proposedType) {
        $(""#selectionType"").val(proposedType);
    }

</script>
");
            WriteLiteral(@"

<div class=""content-wrapper"">

    <section class=""content-header"">
        <div class=""container-fluid"">
            <div class=""row mb-2"">
                <div class=""col-sm-6"">
                    <h1>Saved Map</h1>
                </div>
                <div class=""col-sm-6"">
                    <ol class=""breadcrumb float-sm-right"">
                        <li class=""breadcrumb-item""><a href=""Index"">All List</a></li>
                        <li class=""breadcrumb-item active"">View Details</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class=""content"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">Proposed List</h3>
                    </div>
                    <!-- /.card-header -->


                    <style>
 ");
            WriteLiteral(@"                       #wrapper {
                            position: relative;
                        }

                        #over_map {
                            position: absolute;
                            top: 100px;
                            left: 10px;
                            z-index: 99;
                        }
                    </style>

                    <div class=""card-body"">

                        <div id=""wrapper"">
                            <div id=""map-canvas"" style=""height:400px;width:100%;"">

                            </div>

                            <div id=""over_map"">
                                <!--
                                <div class=""form-group"">
                                    <input type=""button"" id=""btnSave"" value=""Mark Competitor Locations on Map"" class=""btn btn-danger"" onclick=""markProposedLocations('sh_competitor');"" />

                                </div>
                                -->

             ");
            WriteLiteral("                   <div class=\"form-group\">\r\n");
#nullable restore
#line 510 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                     if (loggedInUser.RolePermission.RolePermissionList.FirstOrDefault(p => p.ModuleId == 15).CanEdit)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <input type=\"button\" id=\"btnList\" value=\"Mark Proposed Locations\" class=\"btn btn-success\" onclick=\"markProposedLocations(\'sh_proposed\');\" />\r\n");
#nullable restore
#line 513 "G:\work\RealEstate\crm\sams\Views\MapCompetitor\AddLocationMap.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                    <input type=""hidden"" id=""selectionType"" value=""0"" />
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.card-body -->



                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->

</div>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<sams.Models.CompetitorViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
