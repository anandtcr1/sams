#pragma checksum "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "8b50662ed22007abf53fa61e8fd971905d6c86ddf02e4636377e4032d208b988"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MapCompetitor_ShowMapForClient), @"mvc.1.0.view", @"/Views/MapCompetitor/ShowMapForClient.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\New folder\RealEstate\crm\sams\Views\_ViewImports.cshtml"
using sams;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\New folder\RealEstate\crm\sams\Views\_ViewImports.cshtml"
using sams.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
using sams.Common;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"8b50662ed22007abf53fa61e8fd971905d6c86ddf02e4636377e4032d208b988", @"/Views/MapCompetitor/ShowMapForClient.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"157e57a806f31030a288a17ff0bf21fb2c899b9f389e4325efe46ac4ee700bf7", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_MapCompetitor_ShowMapForClient : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<sams.Models.CompetitorViewModel>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
  
    UserViewModel loggedInUser = Context.Session.GetObjectFromJson<UserViewModel>("LoggedInAdmin");

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 8 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
  
    ViewData["Title"] = "ShowMapForClient";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var lati = sams.Common.Helper.SamsLatitude;
    var loni = sams.Common.Helper.SamsLongitude;

    if (Model.SelectedCordinates.Count > 0)
    {
        lati = Model.SelectedCordinates[0].Latitude;
        loni = Model.SelectedCordinates[0].Longitude;
    }

    int j = 1;
    foreach (var item in Model.SelectedCordinates)
    {
        if (item.MarkerType == "sh_proposed")
        {
            item.SamsMarkerHeader = "S" + j.ToString();
            j++;
        }
    }

    if (Model.SelectedCordinates.Count <= 0)
    {

    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyByxJE-OM4Lv77gVdAYJAfKOiDpD6H9ofg&v=3.exp&sensor=false&libraries=places""></script>
<script>


    var allMarkersList = [];
                var map;
                var Markers = {};
                var infowindow;
                var locations = [

");
#nullable restore
#line 47 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                      
                        int i = 0;
                        foreach (var selLocations in Model.SelectedCordinates)
                        {


#line default
#line hidden
#nullable disable
            WriteLiteral("                                ");
            WriteLiteral("[\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 53 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.MarkerColor);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'<strong>");
#nullable restore
#line 54 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                          Write(selLocations.MarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </strong> <br />");
#nullable restore
#line 54 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                                                                     Write(selLocations.MarkerAddress);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 55 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                 Write(selLocations.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 56 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                 Write(selLocations.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 57 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.MarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 58 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.MarkerType);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    ");
#nullable restore
#line 59 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                 Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n");
            WriteLiteral("                                ");
            WriteLiteral("    \'");
#nullable restore
#line 61 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.CoordinateId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n");
            WriteLiteral("                                ");
            WriteLiteral("    \'");
#nullable restore
#line 63 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.AddedAddress);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 64 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.LandSize);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 65 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.AskingPrice);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 66 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.Zoning);

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                                ");
            WriteLiteral("    \'");
#nullable restore
#line 67 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                  Write(selLocations.SamsMarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral("\'\r\n                                ");
            WriteLiteral("],\r\n");
#nullable restore
#line 69 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"

                            i = i + 1;
                        }
                    

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n                ];\r\n\r\n                //var icon = new google.maps.MarkerImage(\"img/map/green_pointer.png\");\r\n                var origin = new google.maps.LatLng(");
#nullable restore
#line 82 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                               Write(lati);

#line default
#line hidden
#nullable disable
            WriteLiteral(", ");
#nullable restore
#line 82 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                                      Write(loni);

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

                            function initialize() {
                                var mapOptions = {
                        zoom: 10,
                        center: origin
                                };

                            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    infowindow = new google.maps.InfoWindow();
                                var j = 1;
                                for (i = 0; i < locations.length; i++) {
                                    var colorSelcted = locations[i][0];

                                    var position = new google.maps.LatLng(locations[i][2], locations[i][3]);

                                    var markerType = locations[i][5];
                                    var selHeader = locations[i][4].substring(0, 2);

                                    if (markerType == ""sh_proposed"") {
                                        selHeader = locations[i][12];


                ");
            WriteLiteral(@"                        //var icon = new google.maps.MarkerImage(""http://www.googlemapsmarkers.com/v1/"" + selHeader + ""/"" + colorSelcted + ""/FFFFFF/000000/"");
                                        var icon = {
                                            //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + ""/FFFFFF/FFFFFF/"",
                                            url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
                                            //size: new google.maps.Size(70, 78),
                                            //origin: new google.maps.Point(0, 0),
                                            //anchor: new google.maps.Point(17, 34),
                                            scaledSize: new google.maps.Size(60, 60)
                                        }; // Create a marker for each place.

                                        var marker = new google.maps.Marker({
                                            position: position,
  ");
            WriteLiteral(@"                                          icon: icon,
                                            label: {
                                                text: selHeader,
                                                color: 'white',
                                            },
                                            map: map,
                                        });
                                        j = j + 1;
                                    }
                                    else {

                                        var icon = new google.maps.MarkerImage(colorSelcted);

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            label: {
                                                text: selHeader,
                                                color: 'white',
                ");
            WriteLiteral(@"                            },
                                            map: map,
                                        });

                                    }



                                    allMarkersList.push(marker);


                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                // infowindow.setContent(locations[i][1]);

                                var content = """";
                                var markerType = locations[i][5];

                                if (markerType == 'sh_proposed') {
                                    content += '<div class=""row"">';
                                    content += '   <div class=""col-lg-12"">';
                                    content += '        <div class=""form-group"">';
                                    content += '            <label class=""control-label"">Address : </label>' + locations[i][8];
   ");
            WriteLiteral(@"                                 content += '        </div>';
                                    content += '    </div>';

                                    content += '   <div class=""col-lg-12"">';
                                    content += '        <div class=""form-group"">';
                                    content += '            <label class=""control-label"">Land Size : </label>' + locations[i][9];
                                    content += '        </div>';
                                    content += '    </div>';

                                    content += '   <div class=""col-lg-12"">';
                                    content += '        <div class=""form-group"">';
                                    content += '            <label class=""control-label"">Asking Price : </label>' + locations[i][10];
                                    content += '        </div>';
                                    content += '    </div>';

                                    content += ");
            WriteLiteral(@"'   <div class=""col-lg-12"">';
                                    content += '        <div class=""form-group"">';
                                    content += '            <label class=""control-label"">Zoning : </label>' + locations[i][11];
                                    content += '        </div>';
                                    content += '    </div>';

                                    //content += '<div id=""divLoading"" class=""spinner-border"" role=""status"">';
                                    //content += '    <span class=""sr-only"">Loading...</span>';
                                    //content += '</div>';

                                    content += '</div>';
                                }
                                else {
                                    content = locations[i][1];
                                }

                                infowindow.setContent(content);

                                infowindow.setOptions({ maxWidth: 200 });
   ");
            WriteLiteral(@"                             infowindow.open(map, marker);
                            }
                        })(marker, i));
                        Markers[locations[i][4]] = marker;
                                }






                        locate(0);


    }



                    function locate(marker_id) {
                        var myMarker = Markers[marker_id];
                        var markerPosition = myMarker.getPosition();
                        map.setCenter(markerPosition);
                        google.maps.event.trigger(myMarker, 'click');
                    }

                    google.maps.event.addDomListener(window, 'load', initialize);


</script>

<div id=""map-canvas"" style=""height:600px;width:100%;""></div>

<div class=""row"">
    <div class=""col-12"">
        <div class=""card"">
            <div class=""card-header"">
                <h3 class=""card-title"">Location List</h3>

            </div>
            <!-- /.card-header -->
       ");
            WriteLiteral(@"     <div class=""card-body"">

                <table id=""example1"" class=""table table-sm text-sm"">
                    <thead>
                        <tr>
                            <th>SH #</th>

                            <th>Address</th>
                            <th>Land Size</th>
                            <th>Asking Price</th>
                            <th>Zoning</th>
                        </tr>
                    </thead>

                    <tbody>
");
#nullable restore
#line 249 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                         foreach (var item in Model.SelectedCordinates)
                        {
                            if (item.MarkerType == "sh_proposed")
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <tr>\r\n                                    <td>");
#nullable restore
#line 254 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                   Write(item.SamsMarkerHeader);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 255 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                   Write(item.AddedAddress);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 256 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                   Write(item.LandSize);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 257 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                   Write(item.AskingPrice);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                    <td>");
#nullable restore
#line 258 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                                   Write(item.Zoning);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                </tr>\r\n");
#nullable restore
#line 260 "D:\New folder\RealEstate\crm\sams\Views\MapCompetitor\ShowMapForClient.cshtml"
                            }
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n            <!-- /.card-body -->\r\n\r\n\r\n\r\n        </div>\r\n        <!-- /.card -->\r\n    </div>\r\n    <!-- /.col -->\r\n</div>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<sams.Models.CompetitorViewModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
