@model sams.Models.CompetitorViewModel

@using sams.Common;
@{
    UserViewModel loggedInUser = Context.Session.GetObjectFromJson<UserViewModel>("LoggedInAdmin");
}

@{
    ViewData["Title"] = "ShowMapForClient";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var lati = sams.Common.Helper.SamsLatitude;
    var loni = sams.Common.Helper.SamsLongitude;

    if (Model.SelectedCordinates.Count > 0)
    {
        lati = Model.SelectedCordinates[0].Latitude;
        loni = Model.SelectedCordinates[0].Longitude;
    }

    int j = 1;
    foreach (var item in Model.SelectedCordinates)
    {
        if (item.MarkerType == "sh_proposed")
        {
            item.SamsMarkerHeader = "S" + j.ToString();
            j++;
        }
    }

    if (Model.SelectedCordinates.Count <= 0)
    {

    }
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyByxJE-OM4Lv77gVdAYJAfKOiDpD6H9ofg&v=3.exp&sensor=false&libraries=places"></script>
<script>


    var allMarkersList = [];
                var map;
                var Markers = {};
                var infowindow;
                var locations = [

                    @{
                        int i = 0;
                        foreach (var selLocations in Model.SelectedCordinates)
                        {

                                @:[
                                @:    '@selLocations.MarkerColor',
                                @:    '<strong>@selLocations.MarkerHeader </strong> <br />@selLocations.MarkerAddress',
                                @:    @selLocations.Latitude,
                                @:    @selLocations.Longitude,
                                @:    '@selLocations.MarkerHeader',
                                @:    '@selLocations.MarkerType',
                                @:    @i,

                                @:    '@selLocations.CoordinateId',

                                @:    '@selLocations.AddedAddress',
                                @:    '@selLocations.LandSize',
                                @:    '@selLocations.AskingPrice',
                                @:    '@selLocations.Zoning',
                                @:    '@selLocations.SamsMarkerHeader'
                                @:],

                            i = i + 1;
                        }
                    }






                ];

                //var icon = new google.maps.MarkerImage("img/map/green_pointer.png");
                var origin = new google.maps.LatLng(@lati, @loni);

                            function initialize() {
                                var mapOptions = {
                        zoom: 10,
                        center: origin
                                };

                            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    infowindow = new google.maps.InfoWindow();
                                var j = 1;
                                for (i = 0; i < locations.length; i++) {
                                    var colorSelcted = locations[i][0];

                                    var position = new google.maps.LatLng(locations[i][2], locations[i][3]);

                                    var markerType = locations[i][5];
                                    var selHeader = locations[i][4].substring(0, 2);

                                    if (markerType == "sh_proposed") {
                                        selHeader = locations[i][12];


                                        //var icon = new google.maps.MarkerImage("http://www.googlemapsmarkers.com/v1/" + selHeader + "/" + colorSelcted + "/FFFFFF/000000/");
                                        var icon = {
                                            //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + "/FFFFFF/FFFFFF/",
                                            url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
                                            //size: new google.maps.Size(70, 78),
                                            //origin: new google.maps.Point(0, 0),
                                            //anchor: new google.maps.Point(17, 34),
                                            scaledSize: new google.maps.Size(60, 60)
                                        }; // Create a marker for each place.

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            label: {
                                                text: selHeader,
                                                color: 'white',
                                            },
                                            map: map,
                                        });
                                        j = j + 1;
                                    }
                                    else {

                                        var icon = new google.maps.MarkerImage(colorSelcted);

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            label: {
                                                text: selHeader,
                                                color: 'white',
                                            },
                                            map: map,
                                        });

                                    }



                                    allMarkersList.push(marker);


                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                // infowindow.setContent(locations[i][1]);

                                var content = "";
                                var markerType = locations[i][5];

                                if (markerType == 'sh_proposed') {
                                    content += '<div class="row">';
                                    content += '   <div class="col-lg-12">';
                                    content += '        <div class="form-group">';
                                    content += '            <label class="control-label">Address : </label>' + locations[i][8];
                                    content += '        </div>';
                                    content += '    </div>';

                                    content += '   <div class="col-lg-12">';
                                    content += '        <div class="form-group">';
                                    content += '            <label class="control-label">Land Size : </label>' + locations[i][9];
                                    content += '        </div>';
                                    content += '    </div>';

                                    content += '   <div class="col-lg-12">';
                                    content += '        <div class="form-group">';
                                    content += '            <label class="control-label">Asking Price : </label>' + locations[i][10];
                                    content += '        </div>';
                                    content += '    </div>';

                                    content += '   <div class="col-lg-12">';
                                    content += '        <div class="form-group">';
                                    content += '            <label class="control-label">Zoning : </label>' + locations[i][11];
                                    content += '        </div>';
                                    content += '    </div>';

                                    //content += '<div id="divLoading" class="spinner-border" role="status">';
                                    //content += '    <span class="sr-only">Loading...</span>';
                                    //content += '</div>';

                                    content += '</div>';
                                }
                                else {
                                    content = locations[i][1];
                                }

                                infowindow.setContent(content);

                                infowindow.setOptions({ maxWidth: 200 });
                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                        Markers[locations[i][4]] = marker;
                                }






                        locate(0);


    }



                    function locate(marker_id) {
                        var myMarker = Markers[marker_id];
                        var markerPosition = myMarker.getPosition();
                        map.setCenter(markerPosition);
                        google.maps.event.trigger(myMarker, 'click');
                    }

                    google.maps.event.addDomListener(window, 'load', initialize);


</script>

<div id="map-canvas" style="height:600px;width:100%;"></div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Location List</h3>

            </div>
            <!-- /.card-header -->
            <div class="card-body">

                <table id="example1" class="table table-sm text-sm">
                    <thead>
                        <tr>
                            <th>SH #</th>

                            <th>Address</th>
                            <th>Land Size</th>
                            <th>Asking Price</th>
                            <th>Zoning</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.SelectedCordinates)
                        {
                            if (item.MarkerType == "sh_proposed")
                            {
                                <tr>
                                    <td>@item.SamsMarkerHeader</td>
                                    <td>@item.AddedAddress</td>
                                    <td>@item.LandSize</td>
                                    <td>@item.AskingPrice</td>
                                    <td>@item.Zoning</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>


            </div>
            <!-- /.card-body -->



        </div>
        <!-- /.card -->
    </div>
    <!-- /.col -->
</div>