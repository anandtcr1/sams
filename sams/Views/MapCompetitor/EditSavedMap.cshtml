@model sams.Models.CompetitorViewModel

@using sams.Common;
@{
    UserViewModel loggedInUser = Context.Session.GetObjectFromJson<UserViewModel>("LoggedInAdmin");
}

@{
    ViewData["Title"] = "EditSavedMap";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    var lati = sams.Common.Helper.SamsLatitude;
    var loni = sams.Common.Helper.SamsLongitude;

    if (Model.SelectedCordinates.Count > 0)
    {
        lati = Model.SelectedCordinates[0].Latitude;
        loni = Model.SelectedCordinates[0].Longitude;
    }

    int j = 1;
    foreach (var item in Model.SelectedCordinates)
    {
        if (item.MarkerType == "sh_proposed")
            item.SamsMarkerHeader = "S" + j.ToString();
        j++;
    }
}


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyByxJE-OM4Lv77gVdAYJAfKOiDpD6H9ofg&v=3.exp&sensor=false&libraries=places"></script>
<script>

    function SaveAddress() {
        var adderess = $('#txtAddress').val();
        var landSize = $('#txtLandSize').val();
        var askingPrice = $('#txtAskingPrice').val();
        var zoning = $('#txtZoning').val();
        var markerId = $('#txtMarkerId').val();

        var headerDetails = { adderess: adderess, landSize: landSize, askingPrice: askingPrice, zoning: zoning, markerId: markerId }
        var JsonHeaderDetails = JSON.stringify(headerDetails);
        locHeader = {
            jsonString: JsonHeaderDetails
        };


        var baseUrl = "@Url.Action("UpdateMapCordinateAddress", "MapCompetitor")";

        $.ajax({
            type: 'POST',
            url: baseUrl,
            data: locHeader,
            success: function (response) {
                if (response != null) {
                    alert("Address Updated");
                    location.reload();
                }
            },
            failure: function (response) {

                alert(response.responseText);
            },
            error: function (response) {

                alert(response.responseText);
            }
        });

    }

    var allMarkersList = [];
                var map;
                var Markers = {};
                var infowindow;
                var locations = [

                    @{
                        int i = 0;
                        foreach (var selLocations in Model.SelectedCordinates)
                        {

                                @:[
                                @:    '@selLocations.MarkerColor',
                                @:    '<strong>@selLocations.MarkerHeader </strong> <br />@selLocations.MarkerAddress',
                                @:    @selLocations.Latitude,
                                @:    @selLocations.Longitude,
                                @:    '@selLocations.MarkerHeader',
                                @:    '@selLocations.MarkerType',
                                @:    @i,
                                @:    '@selLocations.CoordinateId',

                                @:    '@selLocations.AddedAddress',
                                @:    '@selLocations.LandSize',
                                @:    '@selLocations.AskingPrice',
                                @:    '@selLocations.Zoning',
                                @:    '@selLocations.SamsMarkerHeader'
                                @:],

                            i++;
                        }
                    }






                ];

                //var icon = new google.maps.MarkerImage("img/map/green_pointer.png");
                var origin = new google.maps.LatLng(@lati, @loni);

                            function initialize() {
                                var mapOptions = {
                        zoom: 10,
                        center: origin
                                };

                            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

                    infowindow = new google.maps.InfoWindow();
                                var j = 1;
                                for (i = 0; i < locations.length; i++) {
                                    var colorSelcted = locations[i][0];

                                    var position = new google.maps.LatLng(locations[i][2], locations[i][3]);

                                    var markerType = locations[i][5];
                                    var selHeader = locations[i][4].substring(0, 2);

                                    if (markerType == "sh_proposed") {
                                        selHeader = locations[i][12];
                                        j = j + 1;

                                        /*
                                        var icon = new google.maps.MarkerImage(
                                            "http://www.googlemapsmarkers.com/v1/" + selHeader + "/" + colorSelcted + "/FFFFFF/000000/",
                                            new google.maps.Size(50, 60),
                                        );
                                        */

                                        var icon = {
                                            //url: 'http://www.googlemapsmarkers.com/v1/' + 'S' + '/' + '850685' + "/FFFFFF/FFFFFF/",
                                            url: 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png',
                                            //size: new google.maps.Size(70, 78),
                                            //origin: new google.maps.Point(0, 0),
                                            //anchor: new google.maps.Point(17, 34),
                                            scaledSize: new google.maps.Size(60, 60)
                                        }; // Create a marker for each place.

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            map: map,
                                            label: "SH"
                                        });
                                    }
                                    else {

                                        //var icon = new google.maps.MarkerImage("http://www.googlemapsmarkers.com/v1/" + selHeader + "/" + colorSelcted + "/FFFFFF/FFFFFF/");

                                        //var icon = "http://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                                        var icon = {
                                            url: colorSelcted, // url
                                            scaledSize: new google.maps.Size(30, 30), // size
                                        };

                                        /*
                                        var marker = new google.maps.Marker({
                                            position: position,
                                            icon: icon,
                                            map: map,
                                        });
                                        */

                                        var marker = new google.maps.Marker({
                                            position: position,
                                            label: {
                                                text: selHeader,
                                                color: 'white',
                                            },
                                            icon: icon,
                                            map: map,
                                        });
                                    }

                                    allMarkersList.push(marker);


                        google.maps.event.addListener(marker, 'click', (function (marker, i) {
                            return function () {
                                //infowindow.setContent(locations[i][1]);
                                infowindow.setOptions({ maxWidth: 200 });

                                var content = "";
                                content += '<div class="row">';
                                content += '   <div class="col-lg-12">';
                                content += '        <div class="form-group">';
                                content += '            <label class="control-label">Address</label>';
                                content += '            <input name="txtAddress" id="txtAddress" class="form-control" value="' + locations[i][8] + '" />';
                                content += '            <input type="hidden" name="txtMarkerId" id="txtMarkerId" class="form-control" value="' + locations[i][7] + '" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class="col-lg-12">';
                                content += '        <div class="form-group">';
                                content += '            <label class="control-label">Land Size</label>';
                                content += '            <input name="txtLandSize" id="txtLandSize" class="form-control" value="' + locations[i][9] + '" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class="col-lg-12">';
                                content += '        <div class="form-group">';
                                content += '            <label class="control-label">Asking Price</label>';
                                content += '            <input name="txtAskingPrice" id="txtAskingPrice" class="form-control"  value="' + locations[i][10] + '" />';
                                content += '        </div>';
                                content += '    </div>';

                                content += '   <div class="col-lg-12">';
                                content += '        <div class="form-group">';
                                content += '            <label class="control-label">Zoning</label>';
                                content += '            <input name="txtZoning" id="txtZoning" class="form-control" value="' + locations[i][11] + '" />';
                                content += '        </div>';
                                content += '    </div>';

                                //content += '<div id="divLoading" class="spinner-border" role="status">';
                                //content += '    <span class="sr-only">Loading...</span>';
                                //content += '</div>';

                                content += '</div>';

                                content += "<br /><input class='btn btn-block btn-danger btn-sm' type='button' onclick = 'SaveAddress();' value = 'Save Address' />";



                                infowindow.setContent(content);

                                infowindow.open(map, marker);
                            }
                        })(marker, i));
                        Markers[locations[i][4]] = marker;
                                }






                        locate(0);


    }



                    function locate(marker_id) {
                        var myMarker = Markers[marker_id];
                        var markerPosition = myMarker.getPosition();
                        map.setCenter(markerPosition);
                        google.maps.event.trigger(myMarker, 'click');
                    }

                    google.maps.event.addDomListener(window, 'load', initialize);


    function exportExcel() {
        //location.href = "AddSurplusProperty";
        location.href = "ExportExcel";
    }

    function exportExcel(headerId) {
        var baseUrl = "@Url.Action("ExportExcel", "MapCompetitor")?headerId=" + headerId;
        //location.href = "../CStore/DeleteProperty/?propertyId=" + propertyId;
        location.href = baseUrl;
    }
</script>


<div class="content-wrapper">

    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Saved Map</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="Index">All List</a></li>
                        <li class="breadcrumb-item active">View Details</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Proposed List</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">

                        <div id="map-canvas" style="height:600px;width:100%;"></div>
                    </div>
                    <!-- /.card-body -->



                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Location List</h3>

                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">

                        <table id="example1" class="table table-sm text-sm">
                            <thead>
                                <tr>
                                    <th>Marker Header</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>

                                    <th>Address</th>
                                    <th>Land Size</th>
                                    <th>Asking Price</th>
                                    <th>Zoning</th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var item in Model.SelectedCordinates)
                                {
                                    if (item.MarkerType == "sh_proposed")
                                    {
                                        <tr>
                                            <td>@item.SamsMarkerHeader</td>
                                            <td>@item.Latitude</td>
                                            <td>@item.Longitude</td>

                                            <td>@item.AddedAddress</td>
                                            <td>@item.LandSize</td>
                                            <td>@item.AskingPrice</td>
                                            <td>@item.Zoning</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                        <button type="button" class="btn btn-success" onclick="exportExcel(@Model.SelectedCordinates[0].HeaderId)">Export</button>
                    </div>
                    <!-- /.card-body -->



                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->

</div>

